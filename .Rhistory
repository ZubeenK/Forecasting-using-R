library(readxl)
train <- read_excel("E:/IIT bombay/SEM 2/Quantitative model SCM-IE 714/Assignment/train.csv")
View(train)
library(readxl)
Train <- read_excel("E:/IIT bombay/SEM 2/Quantitative model SCM-IE 714/Assignment/Train.csv")
View(Train)
clc
clearPushBack()
clear
training_data <- read_csv("E:/IIT bombay/SEM 2/Quantitative model SCM-IE 714/Assignment/Train.csv")
print(getwd())
print(getwd())
training_data <- read.csv("training_data.csv")
training_data <- read.csv("E:\IIT bombay\SEM 2\Quantitative model SCM-IE 714\Assignment/training_data.csv")
training_data <- read.csv("714_assign/training_data.csv")
library(readr)
training_data <- read_csv("training_data.csv")
View(training_data)
library(readr)
test_data <- read_csv("test_data.csv")
View(test_data)
View(training_data)
dates <- as.Date(training_data$`Week Start Date`,format = "%d-%b-%y")
myts =ts(myvector, start=c(2018, 1), end=c(2020, 12), frequency=105)
myts =ts(training_data, start=c(2018, 1), end=c(2020, 12), frequency=105)
plot(myts)
tr = stl(myts, s.window="period")
stl(myts, s.window="periodic", robust=TRUE)
fit <- stl(myts, s.window="period")
decompose
plot(decompose)
plot(myts)
plot(trend)
decom = decompose()
x = decompose
plot(x)
decom = decompose(training_data)
save(x)
plot(decompose(myts))
plot(myts)
plot(decompose(myts,type = additive))
plot(decompose(myts,type = c(additive))
plot(decompose(myts,type = c(additive))
plot(decompose(myts,type = c(additive))
plot(decompose(myts,type = c(additive))
plot(decompose(myts))
plot()
Quan<-ts(training_data$`Weekly Demand Quantity`, frequency = 52, start = c(2018, 7))
Quan_dec<-decompose(Quan)
plot(Quan_dec)
auto.arima
install auto.arima
forecast::auto.arima
ar<-ts(training_data$`Weekly Demand Quantity`, frequency = 52, start = c(2018, 7))
ar_pl<-auto.arima(ar)
fit <- auto.arima(training_data)
install.packages('forecast', dependencies = TRUE)
install.packages("forecast", dependencies = TRUE)
library(forecast)
fit <- auto.arima(training_data)
fit <- auto.arima(ts)
fit <- auto.arima(myts)
ari<-ts(training_data)
ari_pl<-auto.arima(ari)
libraray(forecast)
arima_mod <- auto.arima(myts, ic ="aic", trace = "TRUE",start=c(2018, 1), end=c(2020, 12), frequency=52)
library(timeseries)
library(tseries)
library(forecast)
arima_mod <- auto.arima(myts, ic ="aic", trace = "TRUE",start=c(2018, 1), end=c(2020, 12), frequency=52)
arima_mod <- auto.arima(myts, ic ="aic", trace = "TRUE",start=c(2018,07,07), end=c(2020,07,04), frequency=52)
arima_model <- auto.arima(myts, ic ="aic", trace = "TRUE",start=c(2018,07,07), end=c(2020,07,04), frequency=52)
arima_mod <- auto.arima(training_data)
library(forecast)
arima_mod <- auto.arima(training_data)
arima_mod <- auto.arima(myts)
arima_mod <- auto.arima(Quan)
plot(arima_mod)
arima_mod <- auto.arima(Quan , ic = "aic", start=c(2018, 1), end=c(2020, 12), frequency=52)
arima_mod <- auto.arima(Quan)
predict(arima_mod)
print(arima_mod)
plot(arima_mod)
fit_ari<-ts(training_data$`Weekly Demand Quantity`, frequency = 52, start = c(2018, 07,07),end = c(2020,07,04))
arima_mod <- auto.arima(fit_ari)
predict(arima_mod)
print(arima_mod)
forecast_ari <- forecast(arima_mod, h = 8)
print(forecast_ari)
plot(forecast_ari)
mape(fit_ari,forecast_ari)
library(MLmetrics)
install.packages("MLmetrics")
library(MLmetrics)
mape(fit_ari,forecast_ari)
MAPE(fit_ari,forecast_ari)
accuracy(forecast_ari)
mape = MAPE(test_data$`Weekly Demand Quantity` , forecast_ari$mean)
print(mape)
wmape = MAPE(test_data$`Weekly Demand Quantity` , forecast_ari$mean,w = NULL, ...)
wmape = MAPE(test_data$`Weekly Demand Quantity` , forecast_ari,w = NULL, ...)
wmape = MAPE(test_data$`Weekly Demand Quantity` , forecast_ari)
wmape = MAPE(test_data$`Weekly Demand Quantity` , forecast_ari,w = NULL, ...)
acf(Quan)
pacf(Quan)
acf(fit_ari$residual)
acf(arima_mod$residual)
pacf(arima_mod$residual)
m <- mean(abs((test_data$`Weekly Demand Quantity` - forecast_ari$mean)/test_data))
m <- mean(abs((test_data$`Weekly Demand Quantity` - forecast_ari$mean)/test_data$`Weekly Demand Quantity`))
wmape <- sum(abs(test_data$`Weekly Demand Quantity` - forecast_ari$mean))/sum(abs(test_data$`Weekly Demand Quantity`))
print(wmape)
library(Metricweighted)
library(forecast)
adf.test(Quan)
library(tseries)
adf.test(Quan)
new_p <- diff(Quan, differences = 1)
autoplot(new_p)
adf.test(new_p)
pacm(new_p)
library(forecast)
pacm(new_p)
library(forecast)
Pacm(new_p)
Pacf(new_p)
acm(new_p)
Acf(new_p)
Pacf(new_p)
new_model <- Arima(y = Quan,order = c(1,1,0))
new_fore <- forecast(new_model,h = 8)
autoplot(new_fore)
mape1 = MAPE(test_data$`Weekly Demand Quantity` , new_fore$mean)
library(forecast)
mape1 = MAPE(test_data$`Weekly Demand Quantity` , new_fore$mean)
library(MLmetrics)
mape1 = MAPE(test_data$`Weekly Demand Quantity` , new_fore$mean)
print(mape1)
m1 <- mean(abs((test_data$`Weekly Demand Quantity` - new_fore$mean)/test_data$`Weekly Demand Quantity`))
wmape1 <- sum(abs(test_data$`Weekly Demand Quantity` - new_fore$mean))/sum(abs(test_data$`Weekly Demand Quantity`))
print(wmape1)
library(forecast)
fit_hol <- ts(training_data$`Weekly Demand Quantity`, frequency = 52, start = c(2018, 07,07),end = c(2020,07,04))
holt_model <- HoltWinters(fit_hol)
forecast_holt <- forecast(holt_model, h = 8)
plot(forecast_holt)
mape2 = MAPE(test_data$`Weekly Demand Quantity` , forecast_holt$mean)
print(mape2)
m2 <- mean(abs((test_data$`Weekly Demand Quantity` - forecast_holt$mean)/test_data$`Weekly Demand Quantity`))
wmape <- sum(abs(test_data$`Weekly Demand Quantity` - forecast_holt$mean))/sum(abs(test_data$`Weekly Demand Quantity`))
wmape2 <- sum(abs(test_data$`Weekly Demand Quantity` - forecast_holt$mean))/sum(abs(test_data$`Weekly Demand Quantity`))
print(wmape2)
wmape <- sum(abs(test_data$`Weekly Demand Quantity` - forecast_ari$mean))/sum(abs(test_data$`Weekly Demand Quantity`))
print(wmape)
library(readx1)
new_train <- training_data[1:99 , 1:3]
hold_data <- training_data[100:105, 1:3]
print(hold_data)
View(forecast_ari)
forc_holt <- Holt(fit_ari)
library((forecast))
library(forecast)
forc_holt <- Holt(fit_ari)
forc_holt <- holt(fit_ari)
plot(forc_holt)
max(new_train$`Week Start Date`)
new_ts <- ts(training_data$`Weekly Demand Quantity`, frequency = 52, start = c(2018, 07,07),end = max(new_train$`Week Start Date`))
new_ts <- ts(training_data$`Weekly Demand Quantity`, frequency = 52, start = c(2018, 07,07),end = c(2019, 08, 31))
autoplot(new_ts)
arima_mod1 <- auto.arima(new_ts)
plot(arima_mod1)
forecast_ari1 <- forecast(arima_mod1, h = 8)
plot(forecast_ari1)
new_train <- training_data[1:104 , 1:3]
hold_data <- training_data[105, 1:3]
new_ts <- ts(training_data$`Weekly Demand Quantity`, frequency = 52, start = c(2018, 07,07),end = c(2020, 06, 27))
autoplot(new_ts)
arima_mod1 <- auto.arima(new_ts)
new_train <- training_data[1:104 , 1:3]
hold_data <- training_data[105, 1:3]
print(hold_data)
new_ts <- ts(new_train$`Weekly Demand Quantity`, frequency = 52, start = c(2018, 07,07),end = c(2020,06,27))
plot(new_ts)
arima_mod1 <- auto.arima(new_ts)
print(arima_mod1)
plot(arima_mod1)
forecast_ari1 <- forecast(arima_mod1, h = 8)
plot(forecast_ari1)
forcast_holtw1 <- HoltWinters(new_ts)
plot(forecast_holtw1)
forcast_holtw1 <- HoltWinters(new_ts)
plot(forecast_holtw1)
for_hw1 <- forecast(forcast_holtw1, h = 8)
plot(for_hw1)
mape3 = MAPE(hold_data$`Weekly Demand Quantity` , forecast_ari1$mean)
library(MLmetrics)
mape3 = MAPE(hold_data$`Weekly Demand Quantity` , forecast_ari1$mean)
print(mape3)
m4 <- mean(abs((hold_data$`Weekly Demand Quantity` - forecast_ari1$mean)/hold_data$`Weekly Demand Quantity`))
wmape4 <- sum(abs(hold_data$`Weekly Demand Quantity` - forecast_ari1$mean))/sum(abs(hold_data$`Weekly Demand Quantity`))
print(wmape4)
library(MetricsWeighted)
install.packages("MetricsWeighted")
library(MetricsWeighted)
wmape4 =mape(hold_data,forecast_ari1, w = abs(hold_data))
mape4 = MAPE(hold_data$`Weekly Demand Quantity` , for_hw1$mean)
print(mape4)
m5 <- mean(abs((hold_data$`Weekly Demand Quantity` - for_hw1$mean)/hold_data$`Weekly Demand Quantity`))
wmape5 <- sum(abs(hold_data$`Weekly Demand Quantity` - for_hw11$mean))/sum(abs(hold_data$`Weekly Demand Quantity`))
wmape4 <- sum(abs(hold_data$`Weekly Demand Quantity` - for_hw1$mean))/sum(abs(hold_data$`Weekly Demand Quantity`))
print(wmape4)
adf.test(Quan)
library(forecast)
adf.test(Quan)
library(Metrics)
library(tseries)
adf.test(Quan)
Quan_d2<- diff(Quan,differences = 1)
adf.test(Quan_d2)
autoplot(Quan_d2)
acf(Quan_d2)
pacf(Quan_d2)
manual_fit<-arima(Quan,order = c(1,1,0))
manual_forecast<-forecast(manual_fit,h = 8)
autoplot(manual_forecast)
mape5 = MAPE(test_data$`Weekly Demand Quantity` , manual_forecast$mean)
print(mape5)
wmape5 <- sum(abs(test_data$`Weekly Demand Quantity` - manual_forecast$mean))/sum(abs(test_data$`Weekly Demand Quantity`))
print(wmape5)
